:root {
    --peach: #f8b195;
    --salmon: #f27280;
    --bacon: #c06c85;
    --blueberry: #6c5c7c;
    --blueberry-light: #345d7e;
    --denial-red: #e44d42;
    --denial-red-hover: #c44138;

    --charcoal: #4c4c4c;
    --charcoal-midopacity: #4c4c4c9c;
    --charcoal-light: #646464;
    --burnt-log: #2d2d2d;

    --lime: #6ab04c;
    --lime-light: #2ecb70;
    --lime-dark: #4cd137;

    --confirm-blue: #3597d9;
    --confirm-blue-hover: #3fb2ff;
    
    --text-col: #e7e3ea;


    --defBorderRadius: 15px;

}

* {
    -webkit-user-select: none;
    color: var(--text-col);
}

@font-face {
    font-family: 'gameFont';
    src: url('../font/CT ProLamina.ttf');
}


body {
    font-family: 'gameFont';
    font-size: 32px;
    text-align: center;
    background-color: var(--blueberry-light);
    margin: 0;
}



#message {
    padding-top: 2em;
    color: white;
    font-weight: bold;
    font-size: 24px;
    text-shadow: 1px 1px rgba(0, 0, 0, 0.4);
}

/* ########################################################## */
/*                          Navbar                            */
/* ########################################################## */


.nav-links {
    display: flex;
    flex: 1;
    gap: 1em;
    /* Optional: space between buttons */
}

.button-link {
    flex: 1;
    display: inline-block;
    padding: 10px;
    margin-right: 2%;
    margin-left: 2%;
    background-color: var(--bacon);
    color: white;
    text-decoration: none;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

/* .button-link:hover {
    background-color: var(--blueberry-light);
} */

.button-link.active {
    background-color: var(--peach);
}

.button-link:hover {
    background-color: var(--salmon);
}

.button-link::after {
    background-color: #ff00ea;
}

.navbar {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #6c5c7c;
    padding: 0.5em;
    margin-bottom: 20px;
}

/* allow responsive elemetns in navbar */
.navbar>* {
    flex: 1;
    text-align: center;
}


/* when elements get within a min-width of 300px, they will be stacked */
@media (max-width: 300px) {
    .navbar>* {
        flex: none;
        width: 100%;
    }
}

.burger {
    display: none;
    font-size: 1.5em;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
}

/* ########################################################## */
/* Responsive: Show burger and hide nav links */
/* ########################################################## */

@media (max-width: 600px) {
    .burger {
        display: block;
    }

    .nav-links {
        display: none;
        flex-direction: column;
        width: 100%;
        margin-top: 1em;
    }

    .nav-links.show {
        display: flex;
    }

    .navbar {
        flex-direction: column;
        align-items: flex-start;
    }

    .button-link {
        margin: 0.5em 0;
        width: 100%;
        text-align: left;
        padding-left: 1em;
    }

    .navbar>* {
        flex: none;
        width: 100%;
        text-align: left;
    }
}




/* #################################################################### */
/*                              Checkboxes                              */
/* #################################################################### */


.checkboxWrapper {
  margin-left: 25%;
  margin-right: 25%;
  display: flex;
  flex-direction: column;
  gap: 20px; /* spacing between sliders */
}


/* The container */
.checkBoxContainer {
    display: flex;
    align-items: center; /* vertical centering */
    justify-content: space-between;
    font-size: 22px;
    margin-bottom: 12px;
    cursor: pointer;
    user-select: none;
    gap: 25px;
    gap: 10px;

}


/* Hide the browser's default checkbox beacuse its disgusting */

.checkBoxContainer input {
    position: absolute;
    opacity: 0;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
    height: 25px;
    width: 25px;
    background-color: var(--blueberry);
    border-radius: 5px;
    position: relative; /* for the checkmark pseudo-element */
    flex-shrink: 0; /* prevent it from shrinking */
}

/* On mouse-over*/
.checkBoxContainer:hover input ~ .checkmark {
    background-color: var(--salmon);
}

/* When the checkbox is checked */
.checkBoxContainer input:checked ~ .checkmark {
    background-color: var(--peach);
}

/* Create the checkmark (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkBoxContainer input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark */
.checkBoxContainer .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}


/* #################################################################### */
/*                          override default scroll                     */
/* #################################################################### */

::-webkit-scrollbar {
    width: 10px;
    background-color: var(--burnt-log);
}

::-webkit-scrollbar-thumb {
    background-color: var(--charcoal);
    border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
    background-color: var(--charcoal-light);
}

